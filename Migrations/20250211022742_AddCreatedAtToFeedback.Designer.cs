// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualQueueSystem.Data;

#nullable disable

namespace VirtualQueueSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250211022742_AddCreatedAtToFeedback")]
    partial class AddCreatedAtToFeedback
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("VirtualQueueSystem.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("VirtualQueueSystem.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Breakfast",
                            ImageUrl = "/images/pancakes.jpg",
                            Name = "Pancakes",
                            Price = 5.99m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Breakfast",
                            ImageUrl = "/images/omelette.jpg",
                            Name = "Omelette",
                            Price = 4.50m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Lunch",
                            ImageUrl = "/images/grilled-chicken.jpg",
                            Name = "Grilled Chicken",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Lunch",
                            ImageUrl = "/images/caesar-salad.jpg",
                            Name = "Caesar Salad",
                            Price = 6.50m
                        },
                        new
                        {
                            Id = 5,
                            Category = "Dinner",
                            ImageUrl = "/images/steak.jpg",
                            Name = "Steak",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 6,
                            Category = "Dinner",
                            ImageUrl = "/images/salmon.jpg",
                            Name = "Salmon",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 7,
                            Category = "Snacks",
                            ImageUrl = "/images/fries.jpg",
                            Name = "French Fries",
                            Price = 3.99m
                        },
                        new
                        {
                            Id = 8,
                            Category = "Snacks",
                            ImageUrl = "/images/nuggets.jpg",
                            Name = "Chicken Nuggets",
                            Price = 4.99m
                        });
                });

            modelBuilder.Entity("VirtualQueueSystem.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QueueNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VirtualQueueSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VirtualQueueSystem.Models.Feedback", b =>
                {
                    b.HasOne("VirtualQueueSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VirtualQueueSystem.Models.Order", b =>
                {
                    b.HasOne("VirtualQueueSystem.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
